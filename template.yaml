AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Parameters:
  CorsOrigin:
    Type: String
    Default: "'*'"
    Description: (Optional) Cross-origin resource sharing (CORS) Origin. You can specify a single origin, all "*" or leave empty and no CORS will be applied.
    MaxLength: 250
  SSMParameterPrefix:
    Type: String
    Default: 'lambda-stripe-charge'
    Description: >
      This component assumes the Stripe Secret key needed to use the Stripe Charge API is stored as SecureStrings in SSM Parameter Store under the prefix defined by
      this parameter. See the component README for details.
    AllowedPattern: ^[0-9a-zA-Z-][0-9a-zA-Z-\/]+
    ConstraintDescription: 'Must start with alphanumeric characters (excluding a slash)'
  EnableInstantCapture:
    Type: String
    AllowedValues: [true, false]
    Default: true
    Description: To enable capturing / authorizing a payment before charging
Conditions:
  ShouldEnableCapture: !Equals [true, !Ref EnableInstantCapture]
Resources:
  ChargeStripeApiWebhook:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: !Ref CorsOrigin
        MaxAge: "'3600'"
        AllowMethods: "'OPTIONS,POST'"
  CreateStripeCharge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: charge.handler
      Runtime: nodejs8.10
      Timeout: 10
      Policies:
        - SNSCrudPolicy:
            TopicName: !GetAtt SNSTopic.TopicName
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${SSMParameterPrefix}/stripe-secret-key
      Environment:
        Variables:
          IS_CORS: IsCorsDefined
          CORS_ORIGIN: !Ref CorsOrigin
          SSM_PARAMETER_PREFIX: !Ref SSMParameterPrefix
          TOPIC_ARN: !Ref SNSTopic
          IS_CAPTURE: !Ref EnableInstantCapture
      Events:
        Api:
          Type: Api
          Properties:
            Path: /charge
            Method: POST
            RestApiId: !Ref ChargeStripeApiWebhook
  CaptureStripeCharge:
    Type: AWS::Serverless::Function
    Properties:
      Handler: capture.handler
      Runtime: nodejs8.10
      Timeout: 10
      Policies:
        - SNSCrudPolicy:
            TopicName: !GetAtt SNSTopic.TopicName
        - SSMParameterReadPolicy:
            ParameterName: !Sub ${SSMParameterPrefix}/stripe-secret-key
      Environment:
        Variables:
          IS_CORS: IsCorsDefined
          CORS_ORIGIN: !Ref CorsOrigin
          SSM_PARAMETER_PREFIX: !Ref SSMParameterPrefix
          TOPIC_ARN: !Ref SNSTopic
      Events:
        Api:
          Type: Api
          Properties:
            Path: /capture
            Method: POST
            RestApiId: !Ref ChargeStripeApiWebhook
  SNSTopic:
    Type: AWS::SNS::Topic
Outputs:
  ChargeApiUrl:
    Value: !Sub https://${ChargeStripeApiWebhook}.execute-api.${AWS::Region}.amazonaws.com/prod/charge
    Description: The URL of the API Gateway you provide to Stripe as a webhook it invokes to CREATE a charge based on its token.
  CaptureApiUrl:
    Value: !Sub https://${ChargeStripeApiWebhook}.execute-api.${AWS::Region}.amazonaws.com/prod/capture
    Description: The URL of the API Gateway you provide to Stripe as a webhook it invokes to CAPTURE a charge based on its token.
  SNSTopic:
    Value: !Ref SNSTopic
    Description: The SNS topic your Stripe Lambda is notifying to
